{"version":3,"sources":["MemeGenerator.js","App.js","index.js"],"names":["MemeGenerator","state","topText","bottomText","activeMeme","allMemes","handleTextChange","bind","handleRandomImg","handleImgChange","handleGeneration","fetch","then","resp","json","memes","data","console","log","setState","event","target","name","value","type","this","preventDefault","randNum","Math","floor","random","length","url","URL","createObjectURL","files","className","placeholder","onChange","onClick","htmlFor","id","accept","hidden","src","alt","React","Component","App","basename","ReactDOM","render","document","getElementById"],"mappings":"4PAsGeA,E,kDAnGb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,QAAS,GACTC,WAAY,GACZC,WACE,+DACFC,SAAU,IAEZ,EAAKC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,gBAAkB,EAAKA,gBAAgBD,KAArB,gBACvB,EAAKE,gBAAkB,EAAKA,gBAAgBF,KAArB,gBACvB,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBAZZ,E,gEAeO,IAAD,OAClBI,MAAM,qCACHC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACC,GAAU,IACPE,EAAUF,EAAKG,KAAfD,MACRE,QAAQC,IAAIH,EAAM,IAClB,EAAKI,SAAS,CAAEd,SAAUU,S,uCAGfK,GAAQ,IAAD,EACQA,EAAMC,OAA5BC,EADc,EACdA,KAAMC,EADQ,EACRA,MACL,WAFa,EACDC,KAEjBC,KAAKN,SAAS,CACZjB,QAAS,GACTC,WAAY,KAEdsB,KAAKN,SAAL,eAAiBG,EAAOC,M,sCAGdH,GACdA,EAAMM,iBACN,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWL,KAAKxB,MAAMI,SAAS0B,QAC/DN,KAAKN,SAAS,CAAEf,WAAYqB,KAAKxB,MAAMI,SAASsB,GAASK,Q,sCAG3CZ,GACdK,KAAKN,SAAS,CAAEf,WAAY6B,IAAIC,gBAAgBd,EAAMC,OAAOc,MAAM,Q,uCAGpDf,GAAQ,IAAD,EACEA,EAAMC,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACdE,KAAKN,SAAL,eAAiBG,EAAOC,M,+BAGhB,IAAD,EACqCE,KAAKxB,MAAzCC,EADD,EACCA,QAASC,EADV,EACUA,WAAYC,EADtB,EACsBA,WAC7B,OACE,6BACE,0BAAMgC,UAAU,QACd,yBAAKA,UAAU,gBACb,2BACEZ,KAAK,OACLF,KAAK,UACLC,MAAOrB,EACPmC,YAAY,WACZC,SAAUb,KAAKnB,mBAEjB,6BACA,2BACEkB,KAAK,OACLF,KAAK,aACLe,YAAY,cACZd,MAAOpB,EACPmC,SAAUb,KAAKnB,mBAEjB,4BAAQkB,KAAK,SAASe,QAASd,KAAKnB,kBAApC,UAIF,yBAAK8B,UAAU,cACb,4BAAQG,QAASd,KAAKjB,iBAAtB,qBACA,2BAAOgC,QAAQ,aAAf,mBAEE,2BACEC,GAAG,YACHnB,KAAK,YACLE,KAAK,OACLkB,OAAO,oBACPJ,SAAUb,KAAKhB,gBACfkC,QAAM,OAKd,yBAAKP,UAAU,WACb,yBAAKQ,IAAKxC,EAAYyC,IAAI,KAC1B,4BAAK3C,GACL,4BAAKC,S,GA7Fa2C,IAAMC,WCenBC,MAbf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAS,KACnB,6BACE,gCACE,8CAEF,kBAAC,EAAD,SCNRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.55ecaa17.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass MemeGenerator extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      topText: \"\",\r\n      bottomText: \"\",\r\n      activeMeme:\r\n        \"https://imgflip.com/s/meme/Shut-Up-And-Take-My-Money-Fry.jpg\",\r\n      allMemes: [],\r\n    };\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n    this.handleRandomImg = this.handleRandomImg.bind(this);\r\n    this.handleImgChange = this.handleImgChange.bind(this);\r\n    this.handleGeneration = this.handleGeneration.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((resp) => resp.json())\r\n      .then((resp) => {\r\n        const { memes } = resp.data;\r\n        console.log(memes[8]);\r\n        this.setState({ allMemes: memes });\r\n      });\r\n  }\r\n  handleTextChange(event) {\r\n    const { name, value, type } = event.target;\r\n    type === \"button\"\r\n      ? this.setState({\r\n          topText: \"\",\r\n          bottomText: \"\",\r\n        })\r\n      : this.setState({ [name]: value });\r\n  }\r\n\r\n  handleRandomImg(event) {\r\n    event.preventDefault();\r\n    const randNum = Math.floor(Math.random() * this.state.allMemes.length);\r\n    this.setState({ activeMeme: this.state.allMemes[randNum].url });\r\n  }\r\n\r\n  handleImgChange(event) {\r\n    this.setState({ activeMeme: URL.createObjectURL(event.target.files[0]) });\r\n  }\r\n\r\n  handleGeneration(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n  render() {\r\n    const { topText, bottomText, activeMeme } = this.state;\r\n    return (\r\n      <div>\r\n        <form className=\"form\">\r\n          <div className=\"form__inputs\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"topText\"\r\n              value={topText}\r\n              placeholder=\"Top Text\"\r\n              onChange={this.handleTextChange}\r\n            />\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              name=\"bottomText\"\r\n              placeholder=\"Bottom Text\"\r\n              value={bottomText}\r\n              onChange={this.handleTextChange}\r\n            />\r\n            <button type=\"button\" onClick={this.handleTextChange}>\r\n              clear\r\n            </button>\r\n          </div>\r\n          <div className=\"form__btns\">\r\n            <button onClick={this.handleRandomImg}>Load Random image</button>\r\n            <label htmlFor=\"fileInput\">\r\n              Open Local Image\r\n              <input\r\n                id=\"fileInput\"\r\n                name=\"fileInput\"\r\n                type=\"file\"\r\n                accept=\".jpg, .jpeg, .png\"\r\n                onChange={this.handleImgChange}\r\n                hidden\r\n              />\r\n            </label>\r\n          </div>\r\n        </form>\r\n        <div className=\"content\">\r\n          <img src={activeMeme} alt=\"\" />\r\n          <h1>{topText}</h1>\r\n          <h2>{bottomText}</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemeGenerator;\r\n","import React from \"react\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport MemeGenerator from \"./MemeGenerator\";\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div>\n        <header>\n          <p>MEME GENERATOR</p>\n        </header>\n        <MemeGenerator />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}